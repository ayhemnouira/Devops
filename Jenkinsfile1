pipeline {
    agent any

    environment {
        // Utilisation d'une URL de DB par défaut si le credential n'existe pas
        DB_URL = credentials('DB_URL_CREDS', [usernameVariable: 'DB_URL'])
        VERSION = "${env.BUILD_ID}"
        // Utilisation directe du credential DockerHub configuré dans Jenkins
        DOCKERHUB_USER = credentials('dockerhub-creds').username
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[
                        url: 'https://github.com/ayhemnouira/Devops.git',
                        credentialsId: 'github-credentials'
                    ]]
                ])
            }
        }

        stage('Build Backend') {
            steps {
                dir('HeuresPlus') {
                    sh 'mvn clean package -DskipTests'
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                }
            }
        }

        stage('Test Backend') {
            steps {
                dir('HeuresPlus') {
                    sh 'mvn test'
                    junit 'target/surefire-reports/**/*.xml'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('heuresplusfrontend') {
                    sh 'npm install'
                    sh 'npm run build'
                    archiveArtifacts artifacts: 'dist/**/*', fingerprint: true
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-creds') {
                        def backendImage = docker.build("${DOCKERHUB_USER}/heuresplus-backend:${VERSION}", 'HeuresPlus')
                        backendImage.push()
                        
                        def frontendImage = docker.build("${DOCKERHUB_USER}/heuresplus-frontend:${VERSION}", 'heuresplusfrontend')
                        frontendImage.push()
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                // Nettoyage seulement si on est dans un contexte node
                if (env.NODE_NAME != null) {
                    cleanWs()
                }
                echo "Build status: ${currentBuild.currentResult}"
            }
        }
        success {
            echo "✅ Build réussi"
        }
        failure {
            echo "❌ Échec du build"
            // Ajouter ici des actions de notification si nécessaire
        }
    }
}
