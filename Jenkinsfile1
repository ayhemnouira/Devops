pipeline {
    agent any

    environment {
        // Version corrigée pour les credentials
        DB_URL = credentials('DB_URL_CREDS') // Simple référence au credential
        VERSION = "${env.BUILD_ID}"
        DOCKERHUB_CREDS = credentials('dockerhub-creds') // Stocke l'ensemble du credential
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[
                        url: 'https://github.com/ayhemnouira/Devops.git',
                        credentialsId: 'github-credentials'
                    ]]
                ])
            }
        }

        stage('Build Backend') {
            steps {
                dir('HeuresPlus') {
                    sh 'mvn clean package -DskipTests'
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                }
            }
        }

        stage('Test Backend') {
            steps {
                dir('HeuresPlus') {
                    sh 'mvn test'
                    junit 'target/surefire-reports/**/*.xml'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('heuresplusfrontend') {
                    sh 'npm install'
                    sh 'npm run build'
                    archiveArtifacts artifacts: 'dist/**/*', fingerprint: true
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    // Utilisation correcte des credentials Docker
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-creds') {
                        def backendImage = docker.build("${env.DOCKERHUB_CREDS_USR}/heuresplus-backend:${VERSION}", 'HeuresPlus')
                        backendImage.push()
                        
                        def frontendImage = docker.build("${env.DOCKERHUB_CREDS_USR}/heuresplus-frontend:${VERSION}", 'heuresplusfrontend')
                        frontendImage.push()
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                cleanWs()
                echo "Build status: ${currentBuild.currentResult}"
            }
        }
        success {
            echo "✅ Build réussi"
        }
        failure {
            echo "❌ Échec du build"
        }
    }
}
